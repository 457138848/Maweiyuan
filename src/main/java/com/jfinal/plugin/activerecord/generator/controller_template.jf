package #(controllerPackageName);

import #(modelPackageName).#(tableMeta.modelName)DTO;
import #(serviceImport);
import com.yixiekeji.core.response.Result;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import java.util.Date;

/**
 * #(tableMeta.remarks)控制层
 *
 * @author #(tableMeta.author)
 */
@Api(tags = "#(tableMeta.remarks)表")
@RestController
@RequestMapping("#(tableMeta.modelName)")
public class #(tableMeta.modelName)Controller {

    #set(serverImplName = firstCharToLowerCase(tableMeta.modelName) + 'Service')
	private static final Logger logger = LoggerFactory.getLogger(#(tableMeta.modelName)Controller.class);

    /**
     * 服务对象
     */
    @Autowired
    private #(serviceName) #(serverImplName);

    @ResponseBody
    @RequestMapping(value = "page", method = RequestMethod.POST)
    @ApiOperation(value = "分页查询", httpMethod = "POST")
    public Result page(@RequestBody #(tableMeta.modelName)DTO entity) {
        return #(serverImplName).show(entity, entity.getPageSize(), entity.getCurrentPage());
    }

    @ResponseBody
    @RequestMapping(value = "list", method = RequestMethod.POST)
    @ApiOperation(value = "列表查询", httpMethod = "POST")
    public Result list(@RequestBody #(tableMeta.modelName)DTO entity) {
        return Result.success(#(serverImplName).select(entity));
    }

    @ResponseBody
    @RequestMapping(value = "{id}", method = RequestMethod.GET)
    @ApiOperation(value = "根据id查询详细信息", httpMethod = "GET")
    public Result queryById(@PathVariable("id") #(tableMeta.primaryKeyJavaType) id) {
        return Result.success(#(serverImplName).selectByPrimaryKey(id));
    }

    @ResponseBody
    @RequestMapping(value = "add", method = RequestMethod.POST)
    @ApiOperation(value = "新增数据", httpMethod = "POST")
    public Result add(@RequestBody #(tableMeta.modelName)DTO entity) {
        entity.setCreateTime(new Date());
        #(serverImplName).insertSelective(entity);
        return Result.success();
    }

    @ResponseBody
    @RequestMapping(value = "update", method = RequestMethod.POST)
    @ApiOperation(value = "修改数据", httpMethod = "POST")
    public Result update(@RequestBody #(tableMeta.modelName)DTO entity) {
        entity.setUpdateTime(new Date());
        #(serverImplName).updateByPrimaryKeySelective(entity);
        return Result.success();
    }

    @ResponseBody
    @RequestMapping(value = "delete", method = RequestMethod.GET)
    @ApiOperation(value = "根据ids删除数据", httpMethod = "GET")
    public Result delete(@RequestParam(value = "ids", required = true) String ids) {
        #(serverImplName).deleteByIds(ids);
        return Result.success();
    }

}