package #(controllerPackageName);

import com.ambow.apimodel.common.ResponseResult;
import com.jfinal.plugin.activerecord.Page;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import #(modelPackageName).#(tableMeta.modelName);
import #(serviceImport);



@RestController
@Api(tags = "#(tableMeta.remarks.trim())")
@RequestMapping("/#(firstCharToLowerCase(tableMeta.modelName))Controller")
public class #(tableMeta.modelName)Controller {
    #set(serverImplName = firstCharToLowerCase(tableMeta.modelName) + 'Service')
    private static final Logger logger = LoggerFactory.getLogger(#(tableMeta.modelName)Controller.class);

    @Autowired
    private #(serviceName) #(serverImplName);

    @ResponseBody
    @RequestMapping(value = "page", method = RequestMethod.POST)
    @ApiOperation(value = "分页查询", httpMethod = "POST")
    public ResponseResult page(@RequestBody #(tableMeta.modelName) entity) {
        Page<#(tableMeta.modelName)> page = #(serverImplName).page(entity);
        return ResponseResult.success(page.getList(),page.getTotalRow());
    }

    @ResponseBody
    @RequestMapping(value = "list", method = RequestMethod.POST)
    @ApiOperation(value = "列表查询", httpMethod = "POST")
    public ResponseResult list(@RequestBody #(tableMeta.modelName) entity) {
        return ResponseResult.success(#(serverImplName).list(entity));
    }

    @ResponseBody
    @RequestMapping(value = "getById", method = RequestMethod.GET)
    @ApiOperation(value = "通过id查询", httpMethod = "GET")
    public ResponseResult list(@RequestParam Integer id) {
        return ResponseResult.success(#(serverImplName).getById(id));
    }

    @ResponseBody
    @RequestMapping(value = "add", method = RequestMethod.POST)
    @ApiOperation(value = "新增", httpMethod = "POST")
    public ResponseResult add(@RequestBody #(tableMeta.modelName) entity) {
        return ResponseResult.success(#(serverImplName).add(entity));
    }

    @ResponseBody
    @RequestMapping(value = "update", method = RequestMethod.POST)
    @ApiOperation(value = "修改", httpMethod = "POST")
    public ResponseResult update(@RequestBody #(tableMeta.modelName) entity) {
        if(null == entity.get#(firstCharToUpperCase(toCamelCase(tableMeta.primaryKey)))() || 0 == entity.get#(firstCharToUpperCase(toCamelCase(tableMeta.primaryKey)))())
            return ResponseResult.paramsError("Id不能为空");
        return ResponseResult.success(#(serverImplName).update(entity));
    }

    @ResponseBody
    @RequestMapping(value = "delete", method = RequestMethod.POST)
    @ApiOperation(value = "删除(物理删除，逻辑删除调用update 设置isDel = 1)", httpMethod = "GET")
    public ResponseResult delete(@RequestParam Integer id) {
        if(null == entity.get#(firstCharToUpperCase(toCamelCase(tableMeta.primaryKey)))() || 0 == entity.get#(firstCharToUpperCase(toCamelCase(tableMeta.primaryKey)))())
            return ResponseResult.paramsError("Id不能为空");
        return ResponseResult.success(#(serverImplName).delete(new #(tableMeta.modelName)().set#(firstCharToUpperCase(toCamelCase(tableMeta.primaryKey)))(id)));
    }

}
