package #(feignPackageName);

import #(modelPackageName).#(tableMeta.modelName)DTO;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import com.github.pagehelper.PageInfo;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import java.util.List;

/**
 * #(tableMeta.remarks)FeignClient
 *
 * @author #(tableMeta.author)
 */
@Api(tags = "#(tableMeta.remarks)FeignClient")
@FeignClient(name = "#(firstCharToLowerCase(tableMeta.modelName))")
public interface #(tableMeta.modelName)FeignClient {

    @ResponseBody
    @RequestMapping(value = "#(firstCharToLowerCase(tableMeta.modelName))#(apiPrefix)/page", method = RequestMethod.POST)
    @ApiOperation(value = "分页查询", httpMethod = "POST")
    PageInfo<#(tableMeta.modelName)DTO> page(@RequestBody #(tableMeta.modelName)DTO entity);

    @ResponseBody
    @RequestMapping(value = "#(firstCharToLowerCase(tableMeta.modelName))#(apiPrefix)/list", method = RequestMethod.POST)
    @ApiOperation(value = "列表查询", httpMethod = "POST")
    List<#(tableMeta.modelName)DTO> list(@RequestBody #(tableMeta.modelName)DTO entity);

    @ResponseBody
    @RequestMapping(value = "#(firstCharToLowerCase(tableMeta.modelName))#(apiPrefix)/{id}", method = RequestMethod.GET)
    @ApiOperation(value = "根据id查询详细信息", httpMethod = "GET")
    #(tableMeta.modelName)DTO queryById(@PathVariable("id") Integer id);

    @ResponseBody
    @RequestMapping(value = "#(firstCharToLowerCase(tableMeta.modelName))#(apiPrefix)/add", method = RequestMethod.POST)
    @ApiOperation(value = "新增数据", httpMethod = "POST")
    void add(@RequestBody #(tableMeta.modelName)DTO entity);

    @ResponseBody
    @RequestMapping(value = "#(firstCharToLowerCase(tableMeta.modelName))#(apiPrefix)/update", method = RequestMethod.POST)
    @ApiOperation(value = "修改数据", httpMethod = "POST")
    void update(@RequestBody #(tableMeta.modelName)DTO entity);

    @ResponseBody
    @RequestMapping(value = "#(firstCharToLowerCase(tableMeta.modelName))#(apiPrefix)/delete", method = RequestMethod.GET)
    @ApiOperation(value = "根据ids删除数据", httpMethod = "GET")
    void delete(@RequestParam(value = "ids", required = true) String ids);

}